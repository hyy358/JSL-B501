C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE CARD
OBJECT MODULE PLACED IN .\Objects\Card.obj
COMPILER INVOKED BY: D:\keil-c51\C51\BIN\C51.EXE UserSrc\Card.c LARGE OPTIMIZE(8,SPEED) BROWSE NOINTPROMOTE INCDIR(.\Use
                    -rSrc;.\StcLib;.\UserSrc\ENG) DEBUG OBJECTEXTEND PRINT(.\Listings\Card.lst) TABS(2) OBJECT(.\Objects\Card.obj)

line level    source

   1          #include "Card.h"
   2          #include "Driver.h"
   3          #include "Eeprom.h"
   4          #include "SysString.h"
   5          #include "stdio.h"
   6          #include "Lcd12864.h"
   7          #include "SysStatus.h"
   8          #include "NameList.h"
   9          #include "RfidCard.h"
  10          
  11          void SaveCardCount(void)
  12          {
  13   1        writeBuf_at24c02(USER_PARA_ADDR+((uint16_t)((uint32_t)(&UsrPara.CardCount)-(uint32_t)(&UsrPara))), (uint8
             -_t *)&UsrPara.CardCount,sizeof(UsrPara.CardCount));
  14   1      }
  15          
  16          void ClearCard(void)
  17          {
  18   1        UsrPara.CardCount = 0;
  19   1        SaveCardCount();
  20   1      }
  21          
  22          void InitCard(void)
  23          {
  24   1        if(UsrPara.CardCount > CARD_COUNT)
  25   1        {
  26   2          ClearCard();
  27   2        }
  28   1      }
  29          
  30          void WriteCardByIdx(uint16_t idx,CardItemType *pItem)
  31          {
  32   1        uint16_t addr = (uint16_t)idx;
  33   1        addr *= sizeof(CardItemType);
  34   1        writeBuf_at24c02(USER_CARD_ADDR+addr, (uint8_t *)pItem,sizeof(CardItemType));
  35   1      }
  36          
  37          void ReadCardByIdx(uint16_t idx,CardItemType *pItem)
  38          {
  39   1        uint16_t addr = (uint16_t)idx;
  40   1        addr *= sizeof(CardItemType);
  41   1        readBuf_at24c02(USER_CARD_ADDR+addr, (uint8_t *)pItem,sizeof(CardItemType));
  42   1      }
  43          
  44          //uint16_t GetCardByRoom(uint16_t room,CardItemType *pItem)
  45          //{
  46          //  uint16_t idx = 0xFFFF;
  47          //  idx = GetIdxByRoom(room,CARD_LIST);
  48          //  if(idx != 0xFFFF)
  49          //  {
  50          //    ReadCardByIdx(idx,pItem);
  51          //    return idx;
  52          //  }
  53          //  return 0xFFFF;
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 2   

  54          //}
  55          
  56          uint16_t CheckCard(uint8_t *card)
  57          {
  58   1        CardItemType tmpItem;
  59   1        uint16_t idx = 0;
  60   1        uint8_t i;
  61   1        if(UsrPara.CardCount == 0)
  62   1        {
  63   2          return 0xFFFF;
  64   2        }
  65   1        while(idx < UsrPara.CardCount)
  66   1        {
  67   2          ReadCardByIdx(idx,&tmpItem);
  68   2          for(i=0;i<RFID_CARD_LEN;i++)
  69   2          {
  70   3            if(tmpItem.Card[i] != card[i])
  71   3            {
  72   4              break;
  73   4            }
  74   3          }
  75   2          if(i == RFID_CARD_LEN)
  76   2          {
  77   3            printf("CheckCard:%bd\r\n",idx);
  78   3            return idx;
  79   3          }
  80   2          idx++;
  81   2        }
  82   1        return 0xFFFF;
  83   1      }
  84          
  85          uint16_t AddCardItem(CardItemType *pItem)
  86          {
  87   1        CardItemType tmpItem;
  88   1        uint16_t idx = 0;
  89   1        uint8_t i;
  90   1        while(idx < UsrPara.CardCount)
  91   1        {
  92   2          ReadCardByIdx(idx,&tmpItem);
  93   2          
  94   2          if(tmpItem.Room == pItem->Room)
  95   2          {
  96   3            for(i=0;i<RFID_CARD_LEN;i++)
  97   3            {
  98   4              if(tmpItem.Card[i] != pItem->Card[i])
  99   4              {
 100   5                break;
 101   5              }
 102   4            }
 103   3            if(i == RFID_CARD_LEN)
 104   3            {
 105   4              return idx;
 106   4            }
 107   3          }
 108   2          idx++;
 109   2        }
 110   1        if(UsrPara.CardCount < CARD_COUNT)
 111   1        {
 112   2          WriteCardByIdx(UsrPara.CardCount,pItem);
 113   2          UsrPara.CardCount++;
 114   2          SaveCardCount();
 115   2          return UsrPara.CardCount-1;
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 3   

 116   2        }
 117   1        return 0xFFFF;
 118   1      }
 119          
 120          void DelCardByIdx(uint16_t idx)
 121          {
 122   1        CardItemType tmpItem;
 123   1        if(idx < UsrPara.CardCount)
 124   1        {
 125   2          if(idx == (UsrPara.CardCount-1))
 126   2          {
 127   3            UsrPara.CardCount--;
 128   3            SaveCardCount();
 129   3          }
 130   2          else
 131   2          {
 132   3            UsrPara.CardCount--;
 133   3            SaveCardCount();
 134   3            ReadCardByIdx(UsrPara.CardCount,&tmpItem);
 135   3            WriteCardByIdx(idx,&tmpItem);
 136   3          }
 137   2        }
 138   1      }
 139          
 140          void DelCardByRoom(uint16_t room)
 141          {
 142   1        uint16_t idx = GetIdxByRoom(room,CARD_LIST);
 143   1        while(idx != 0xFFFF)
 144   1        {
 145   2          DelCardByIdx(idx);
 146   2          idx = GetIdxByRoom(room,CARD_LIST);
 147   2        }
 148   1      }
 149          
 150          void DelCardByCard(uint8_t *card)
 151          {
 152   1        uint16_t idx = CheckCard(card);
 153   1        while(idx != 0xFFFF)
 154   1        {
 155   2          DelCardByIdx(idx);
 156   2          idx = CheckCard(card);
 157   2        }
 158   1      }
 159          
 160          
 161          CardItemType CardEditItem;
 162          static uint8_t CardEditMidx = 0;
 163          static uint8_t CardEditIdx = 0;
 164          
 165          void ShowCard(CardItemType *pItem,bool edit)
 166          {
 167   1      //  uint8_t i;
 168   1        uint32_t num;
 169   1        char Disbuf[60];
 170   1        LcdClear();
 171   1      //  if(pItem->Room > 0)
 172   1      //  {
 173   1      //    sprintf(Disbuf,"%s%4d",StrTabNum,pItem->Room);
 174   1      //    DisplayString(1,0,Disbuf);
 175   1      //    if(CardEditMidx == 0)
 176   1      //    {
 177   1      //    #ifdef LANGUAGE_HB  
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 4   

 178   1      //      SetFlash(1,7);
 179   1      //    #else
 180   1      //      SetFlash(1,strlen(StrTabNum));
 181   1      //    #endif
 182   1      //    }
 183   1      //  }
 184   1      //  else
 185   1      //  {
 186   1      //    DisplayString(1,0,StrTabNum);
 187   1      //    if(CardEditMidx == 0)
 188   1      //    {
 189   1      //    #ifdef LANGUAGE_HB  
 190   1      //      SetFlash(1,7);
 191   1      //    #else
 192   1      //      SetFlash(1,strlen(StrTabNum));
 193   1      //    #endif
 194   1      //    }
 195   1      //  }
 196   1        if(pItem->Room > 0)
 197   1        {
 198   2        //  sprintf(Disbuf,"%s%u",StrTabNum,pItem->Room); 
 199   2          DisplayString(1,0,StrTabNum);
 200   2          sprintf(Disbuf,"%u",pItem->Room);
 201   2          DisplayString(1,(16-HBstrlen(StrTabNum)-strlen(Disbuf)),Disbuf);
 202   2        }
 203   1        else
 204   1        {
 205   2          //sprintf(Disbuf,"%s%",StrTabNum);
 206   2          DisplayString(1,0,StrTabNum);
 207   2        }
 208   1        
 209   1        if(CardEditMidx == 0)
 210   1        {
 211   2        #ifdef LANGUAGE_HB  
 212   2          SetFlash(1,15-HBstrlen(StrTabNum));
 213   2        #else
                  SetFlash(1,strlen((uint8_t *)Disbuf));
                #endif
 216   2        }
 217   1        if(edit)
 218   1        {
 219   2          //sprintf(Disbuf,"%s",StrTabCard);
 220   2          DisplayString(2,0,StrTabCard);
 221   2          if(!MemIsEmpty(pItem->Card,RFID_CARD_LEN))
 222   2          {
 223   3      //      for(i=0;i<RFID_CARD_LEN;i++)
 224   3      //      {
 225   3      //        sprintf(Disbuf,"%s%b02X",Disbuf,pItem->Card[i]);
 226   3      //      }
 227   3            num = pItem->Card[0];
 228   3            num <<= 8;
 229   3            num |= pItem->Card[1];
 230   3            num <<= 8;
 231   3            num |= pItem->Card[2];
 232   3            num <<= 8;
 233   3            num |= pItem->Card[3];
 234   3            sprintf(Disbuf,"%lu",num>>8);
 235   3            DisplayString(2,(16-HBstrlen(StrTabCard)-strlen(Disbuf)),Disbuf);
 236   3          }
 237   2          //DisplayString(2,0,Disbuf);
 238   2        }
 239   1      }
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 5   

 240          
 241          void EditCardCon(void)
 242          {
 243   1        ClearBuf((uint8_t *)&CardEditItem,sizeof(CardItemType));
 244   1        CardEditMidx = 0;
 245   1        CardEditIdx = 0;
 246   1        SysStatus = SYS_EDIT_CARD;
 247   1        ShowCard(&CardEditItem,true);
 248   1      }
 249          
 250          void CardEditKey(uint8_t key)
 251          {
 252   1        uint16_t tmp;
 253   1        static bool Saved = false;
 254   1        if(key == KEY_SURE)
 255   1        {
 256   2          if(CardEditMidx == 1)
 257   2          {
 258   3            if(Saved)
 259   3            {
 260   4              ClearBuf((uint8_t *)&CardEditItem,sizeof(CardEditItem));
 261   4              CardEditIdx = 0;
 262   4            }
 263   3            else
 264   3            {
 265   4              if((CardEditItem.Room > 0)
 266   4                && (!MemIsEmpty(CardEditItem.Card,RFID_CARD_LEN)))
 267   4              {
 268   5                if(AddCardItem(&CardEditItem) != 0xFFFF)
 269   5                {
 270   6                  ShowSaveOK();
 271   6                }
 272   5                else
 273   5                {
 274   6                  ShowErr();
 275   6                }
 276   5                ClearBuf((uint8_t *)&CardEditItem,sizeof(CardEditItem));
 277   5                Saved = true;
 278   5              }
 279   4              else
 280   4              {
 281   5                ShowErr();
 282   5              }
 283   4              return;
 284   4            }
 285   3          }
 286   2          CardEditMidx++;
 287   2          CardEditMidx %= 2;
 288   2          CardEditIdx = 0;
 289   2          switch(CardEditMidx)
 290   2          {
 291   3            case 0:
 292   3              CardEditIdx = 0;
 293   3              tmp = CardEditItem.Room;
 294   3              while(tmp > 0)
 295   3              {
 296   4                CardEditIdx++;
 297   4                tmp /= 10;
 298   4              }
 299   3              break;
 300   3            case 1:
 301   3      //        ClearBuf((uint8_t *)&CardEditItem.Card,sizeof(CardEditItem.Card));
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 6   

 302   3      //        CardEditIdx = 0;
 303   3      //        break;
 304   3      //      case 2:
 305   3              ShowConfirmSave();
 306   3              Saved = false;
 307   3              return;
 308   3          }
 309   2        }
 310   1        else if(key == KEY_DEL)
 311   1        {
 312   2          switch(CardEditMidx)
 313   2          {
 314   3            case 0:
 315   3              if(CardEditIdx > 0)
 316   3              {
 317   4                CardEditIdx--;
 318   4                CardEditItem.Room /= 10;
 319   4              }
 320   3              else
 321   3              {
 322   4                CardSetCon();
 323   4                return;
 324   4              }
 325   3              break;
 326   3      //      case 1:
 327   3      //        if(CardEditIdx > 0)
 328   3      //        {
 329   3      //          CardEditIdx--;
 330   3      //          CardEditItem.Card[CardEditIdx] = 0;
 331   3      //        }
 332   3      //        else
 333   3      //        {
 334   3      //          CardEditMidx = 0;
 335   3      //          CardEditIdx = 0;
 336   3      //          tmp = CardEditItem.Room;
 337   3      //          while(tmp > 0)
 338   3      //          {
 339   3      //            CardEditIdx++;
 340   3      //            tmp /= 10;
 341   3      //          }
 342   3      //        }
 343   3      //        break;
 344   3            case 1:
 345   3              CardEditMidx = 0;
 346   3              CardEditIdx = 0;
 347   3              tmp = CardEditItem.Room;
 348   3              while(tmp > 0)
 349   3              {
 350   4                CardEditIdx++;
 351   4                tmp /= 10;
 352   4              }
 353   3              break;
 354   3          }
 355   2        }
 356   1        else if(key == KEY_BELL)
 357   1        {
 358   2          CardSetCon();
 359   2          return;
 360   2        }
 361   1      
 362   1        if((key >= 0) && (key <= 9))
 363   1        {
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 7   

 364   2          switch(CardEditMidx)
 365   2          {
 366   3            case 0:
 367   3              if(CardEditIdx < 4)
 368   3              {
 369   4                CardEditItem.Room *= 10;
 370   4                CardEditItem.Room += key;
 371   4                CardEditIdx++;
 372   4                if(CardEditItem.Room == 0)
 373   4                {
 374   5                  CardEditIdx = 0;
 375   5                }
 376   4              }
 377   3              break;
 378   3      //      case 1:
 379   3      //        if(CardEditIdx < CARD_LEN)
 380   3      //        {
 381   3      //          CardEditItem.Card[CardEditIdx++] = key+'0';
 382   3      //        }
 383   3      //        break;
 384   3          }
 385   2        }
 386   1        ShowCard(&CardEditItem,true);
 387   1      }
 388          
 389          void CardEditCardIn(uint8_t *card)
 390          {
 391   1      //  uint8_t i;
 392   1      //  ClearBuf((uint8_t *)&CardEditItem.Card,sizeof(CardEditItem.Card));
 393   1      //  for(i=0;i<RFID_CARD_LEN;i++)
 394   1      //  {
 395   1      //    sprintf(CardEditItem.Card,"%s%b02X",CardEditItem.Card,card[i]);
 396   1      //  }
 397   1      //  CardEditMidx = 1;
 398   1      //  CardEditIdx = strlen(CardEditItem.Card);
 399   1        HS_memcpy(CardEditItem.Card,card,RFID_CARD_LEN);
 400   1        ShowCard(&CardEditItem,true);
 401   1      }
 402          
 403          void DeleteCardCon(void)
 404          {
 405   1        ClearBuf((uint8_t *)&CardEditItem,sizeof(PswEditType));
 406   1        CardEditMidx = 0;
 407   1        CardEditIdx = 0;
 408   1        SysStatus = SYS_DEL_CARD;
 409   1        ShowCard(&CardEditItem,!MemIsEmpty(CardEditItem.Card,RFID_CARD_LEN));
 410   1      }
 411          
 412          void CardDeleteKey(uint8_t key)
 413          {
 414   1        uint16_t tmp;
 415   1        static bool Saved = false;
 416   1        if(key == KEY_SURE)
 417   1        {
 418   2          if(CardEditMidx == 1)
 419   2          {
 420   3            if(Saved)
 421   3            {
 422   4              ClearBuf((uint8_t *)&CardEditItem,sizeof(CardEditItem));
 423   4              CardEditIdx = 0;
 424   4            }
 425   3            else
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 8   

 426   3            {
 427   4              if(!MemIsEmpty(CardEditItem.Card,RFID_CARD_LEN))
 428   4              {
 429   5                DelCardByCard(CardEditItem.Card);
 430   5                ClearBuf((uint8_t *)&CardEditItem,sizeof(CardEditItem));
 431   5                Saved = true;
 432   5                ShowDeleteOK();
 433   5              }
 434   4              else if(CardEditItem.Room > 0)
 435   4              {
 436   5                DelCardByRoom(CardEditItem.Room);
 437   5                ClearBuf((uint8_t *)&CardEditItem,sizeof(CardEditItem));
 438   5                Saved = true;
 439   5                ShowDeleteOK();
 440   5              }
 441   4              return;
 442   4            }
 443   3          }
 444   2          CardEditMidx++;
 445   2          CardEditMidx %= 2;
 446   2          CardEditIdx = 0;
 447   2          switch(CardEditMidx)
 448   2          {
 449   3            case 0:
 450   3              CardEditIdx = 0;
 451   3              tmp = CardEditItem.Room;
 452   3              while(tmp > 0)
 453   3              {
 454   4                CardEditIdx++;
 455   4                tmp /= 10;
 456   4              }
 457   3              break;
 458   3            case 1:
 459   3              ShowConfirmDel();
 460   3              Saved = false;
 461   3              return;
 462   3          }
 463   2        }
 464   1        else if(key == KEY_DEL)
 465   1        {
 466   2          switch(CardEditMidx)
 467   2          {
 468   3            case 0:
 469   3              if(CardEditIdx > 0)
 470   3              {
 471   4                CardEditIdx--;
 472   4                CardEditItem.Room /= 10;
 473   4              }
 474   3              else
 475   3              {
 476   4                CardSetCon();
 477   4                return;
 478   4              }
 479   3              break;
 480   3            case 1:
 481   3              CardEditMidx = 0;
 482   3              CardEditIdx = 0;
 483   3              tmp = CardEditItem.Room;
 484   3              while(tmp > 0)
 485   3              {
 486   4                CardEditIdx++;
 487   4                tmp /= 10;
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 9   

 488   4              }
 489   3              break;
 490   3          }
 491   2        }
 492   1        else if(key == KEY_BELL)
 493   1        {
 494   2          CardSetCon();
 495   2          return;
 496   2        }
 497   1      
 498   1        if((key >= 0) && (key <= 9))
 499   1        {
 500   2          switch(CardEditMidx)
 501   2          {
 502   3            case 0:
 503   3              if(CardEditIdx < 4)
 504   3              {
 505   4                CardEditItem.Room *= 10;
 506   4                CardEditItem.Room += key;
 507   4                CardEditIdx++;
 508   4              }
 509   3              if(CardEditItem.Room == 0)
 510   3              {
 511   4                CardEditIdx = 0;
 512   4              }
 513   3              break;
 514   3          }
 515   2        }
 516   1        ShowCard(&CardEditItem,!MemIsEmpty(CardEditItem.Card,RFID_CARD_LEN));
 517   1      }
 518          
 519          void DeleteAllCardCon(void)
 520          {
 521   1        SysStatus = SYS_DEL_ALLCARD;
 522   1        LcdClear();
 523   1        DisplayString(1,0,StrTabDelAllCard);
 524   1      }
 525          void CardDelAllKey(uint8_t key)
 526          {
 527   1        switch(key)
 528   1        {
 529   2          case KEY_SURE:
 530   2            ClearCard();
 531   2            ShowDeleteOK();
 532   2            break;
 533   2          case KEY_BELL:
 534   2          case KEY_DEL:
 535   2            CardSetCon();
 536   2            break;
 537   2        }
 538   1      }
 539          
 540          void CardSetCon(void)
 541          {
 542   1        uint8_t Disbuf[10];
 543   1        
 544   1        SysStatus = SYS_SET_CARD;
 545   1        
 546   1        LcdClear();
 547   1        DisplayString(0,0,StrTabCardSet1);
 548   1        DisplayString(1,0,StrTabCardSet2);
 549   1        DisplayString(2,0,StrTabCardSet3);
C51 COMPILER V9.57.0.0   CARD                                                              06/09/2022 11:28:17 PAGE 10  

 550   1        DisplayString(3,0,StrTabListCount);
 551   1        sprintf(Disbuf,"%u",UsrPara.CardCount);
 552   1        DisplayString(3,15-HBstrlen(StrTabListCount)-strlen(Disbuf),Disbuf);
 553   1      }
 554          
 555          void CardSetKey(uint8_t key)
 556          {
 557   1        switch(key)
 558   1        {
 559   2          case 1:
 560   2            EditCardCon();
 561   2            break;
 562   2          case 2:
 563   2            DeleteCardCon();
 564   2            break;
 565   2          case 3:
 566   2            DeleteAllCardCon();
 567   2            break;
 568   2          case KEY_DEL:
 569   2          case KEY_BELL:
 570   2            SysSettingCon();
 571   2            break;
 572   2        }
 573   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2565    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =      8     127
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
