C51 COMPILER V9.60.0.0   EXTI                                                              11/01/2021 15:13:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXTI
OBJECT MODULE PLACED IN .\Objects\Exti.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE StcLib\Exti.c LARGE OPTIMIZE(8,SPEED) BROWSE NOINTPROMOTE INCDIR(.\UserS
                    -rc;.\StcLib;.\UserSrc\ENG) DEBUG OBJECTEXTEND PRINT(.\Listings\Exti.lst) OBJECT(.\Objects\Exti.obj)

line level    source

   1          #include        "Exti.h"
   2          #include        "Driver.h"
   3          #include        "RfidCard.h"
   4          
   5          /*************  外部函数和变量声明 *****************/
   6          #ifdef EXT_INT0
   7          /********************* INT0中断函数 *************************/
   8          void Ext_INT0 (void) interrupt INT0_VECTOR              //进中断时已经清除标志
   9          {
  10   1              //IrqUpSource |= 0x01;
  11   1              CardIrq();
  12   1              CardRt = 0;
  13   1      }
  14          #endif
  15          #ifdef EXT_INT1
              /********************* INT1中断函数 *************************/
              void Ext_INT1 (void) interrupt INT1_VECTOR              //进中断时已经清除标志
              {
              //      IrqUpSource |= 0x02;
              //      DtmfData = (P6 >> 4)&0x0F;
              }
              #endif
  23          #ifdef EXT_INT2
              /********************* INT2中断函数 *************************/
              void Ext_INT2 (void) interrupt INT2_VECTOR      //
              {
              
              }
              #endif
  30          #ifdef EXT_INT3
              /********************* INT3中断函数 *************************/
              void Ext_INT3 (void) interrupt INT3_VECTOR
              {
              
              }
              #endif
  37          #ifdef EXT_INT4
              /********************* INT4中断函数 *************************/
              void Ext_INT4 (void) interrupt INT4_VECTOR
              {
              
              }
              #endif
  44          //========================================================================
  45          // 函数: u8     Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  46          // 描述: 外部中断初始化程序.
  47          // 参数: INTx: 结构参数,请参考Exti.h里的定义.
  48          // 返回: 成功返回0, 空操作返回1,错误返回2.
  49          // 版本: V1.0, 2012-10-22
  50          //========================================================================
  51          u8      Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  52          {
  53   1      //      if(EXT >  EXT_INT4)     return 1;       //空操作
  54   1      #ifdef EXT_INT0
C51 COMPILER V9.60.0.0   EXTI                                                              11/01/2021 15:13:59 PAGE 2   

  55   1              if(EXT == EXT_INT0)     //外中断0
  56   1              {
  57   2                      IE0  = 0;       //外中断0标志位
  58   2                      if(INTx->EXTI_Interrupt == ENABLE)              EX0 = 1;        //允许中断
  59   2                      else                                                                    EX0 = 0;        //禁止中断
  60   2                      if(INTx->EXTI_Polity > Polity_3)        return 2;       //错误
  61   2                      INT0_Polity(INTx->EXTI_Polity); //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polity_3
  62   2                      if(INTx->EXTI_Mode == EXT_MODE_Fall)    IT0 = 1;        //下降沿中断
  63   2                      else                                                                    IT0 = 0;        //上升,下降沿中断
  64   2                      return  0;              //成功
  65   2              }
  66   1      #endif
  67   1      #ifdef EXT_INT1
                      if(EXT == EXT_INT1)     //外中断1
                      {
                              IE1  = 0;       //外中断1标志位
                              if(INTx->EXTI_Interrupt == ENABLE)              EX1 = 1;        //允许中断
                              else                                                                    EX1 = 0;        //禁止中断
                              if(INTx->EXTI_Polity > Polity_3)        return 2;       //错误
                              INT1_Polity(INTx->EXTI_Polity); //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polity_3
                              if(INTx->EXTI_Mode == EXT_MODE_Fall)    IT1 = 1;        //下降沿中断
                              else                                                                    IT1 = 0;        //上升,下降沿中断
                              return  0;              //成功
                      }
              #endif
  80   1      #ifdef EXT_INT2
                      if(EXT == EXT_INT2)             //外中断2, 固定为下降沿低优先级中断
                      {
                              if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 4);  //允许中断      
                              else                                                            INT_CLKO &= ~(1 << 4);  //禁止中断
                              return  0;              //成功
                      }
              #endif
  88   1      #ifdef EXT_INT3
                      if(EXT == EXT_INT3)             //外中断3, 固定为下降沿低优先级中断
                      {
                              if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 5);  //允许中断      
                              else                                                            INT_CLKO &= ~(1 << 5);  //禁止中断
                              return  0;              //成功
                      }
              #endif
  96   1      #ifdef EXT_INT4
                      if(EXT == EXT_INT4)             //外中断4, 固定为下降沿低优先级中断
                      {
                              if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 6);  //允许中断      
                              else                                                            INT_CLKO &= ~(1 << 6);  //禁止中断
                              return  0;              //成功
                      }
              #endif
 104   1              return 2;       //失败
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   EXTI                                                              11/01/2021 15:13:59 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
